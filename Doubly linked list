#include<bits/stdc++.h>
using namespace std;

struct Node
{
  int data;
  struct Node *prev;
  struct Node *next;
};
struct Node *head=NULL;
int main()
{
    
    while(1)
    {
        cout<<"enter the choice"<<endl;
        int ch;
        cin>>ch;
       switch(ch)
       {
           
           
           case 1:
           {
    int x;
    cin>>x;
   struct Node *temp= new Node;
    temp->data=x;
    temp->prev=NULL;
    temp->next=NULL;
    if(head==NULL)
    {
        head=temp;
    }
    else
    {
        struct Node *ptr=head;
        
        temp->next=head;
        head->prev=temp;
        head=temp;
    }
    
    
       break;
           }
       case 2:
       {
           struct Node *trev=head;
           Node *d=NULL;
           while(trev!=NULL)
           {
              d=trev;
               cout<<trev->data<<" ";
               trev=trev->next;
           }
           trev=d;
           while(trev!=NULL)
           {
               cout<<trev->data<<" ";
               trev=trev->prev;
           }
           
           break;
       }
           
      
        case 3:
        {
            int x;
            cin>>x;
            Node *temp1=head;
             Node *value=new Node;
            value->data=x;
            value->prev=NULL;
            value->next=NULL;
            if(head==NULL)
            {
                head=value;
            }
            else
            {
                while(temp1->next!=NULL)
                {
                    temp1=temp1->next;
                }
                
                value->prev=temp1;
                temp1->next=value;
            }
            break;
        }
      
       
           case 4:
           {
               Node *del;
               if(head==NULL)
               cout<<"Doubly linked list is already empty "<<endl;
               else if(head->next==NULL)
               {
                   del=head;
                   head=NULL;
                   delete(del);
               }
               else
               {
                   del=head;
                   del->next->prev=NULL;
                   head=del->next;
                   delete(del);
               }
               break;
           }
           
           case 5:
           {
               Node *del1;
               if(head==NULL)
               {
                   cout<<"Doubly linked list is already empty"<<endl;
               }
               else if(head->next==NULL)
               {
                   del1=head;
                   head=NULL;
                   delete(del1);
               }
               else 
               {
                   del1=head;
                   while(del1->next!=NULL)
                   {
                       del1=del1->next;
                   }
                   
                    del1->prev->next=NULL;
                   delete(del1);
                   
                   
               }
               break;
           }
           
       }
    }
    
    return 0;
}

